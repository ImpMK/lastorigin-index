{"version":3,"sources":["common.js","NavBar.js","Tooltip.js","Info.js","Skill.js","App.js","index.js"],"names":["loadData","src","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","response","send","loadEnemyData","enemyIndex","then","enemyDataList","enemyData","getURLParameter","sParam","sURLVariables","window","location","search","substring","split","i","length","sParameterName","Hangul","require","NavBar","state","showSearchResult","showIndexResult","SearchList","ResultListStyle","IndexResultListStyle","ContainerStyle","NameList","isResultClosing","isSearchResultClosed","updateSearchList","revstate","str","searcher","Searcher","searchlist","Object","keys","reduce","acc","curr","push","sort","a","b","map","elem","openResultList","console","log","matchMedia","matches","closeResultList","openIndexResultList","index","maxHeight","document","querySelector","scrollHeight","closeIndexResultList","handleResultsToggleClick","value","newstate","setState","prevstate","handleInputFocus","handleInputChange","e","target","scrollTo","handleResultsClick","name","handleIndexResultsClick","typeindex","props","onEnemyChange","scrollToIndex","values","indexOf","resetSearchResult","async","includes","this","className","onClick","style","opacity","type","placeholder","onFocus","onChange","React","Component","List","searchresults","indexes","key","id","indexacc","indexcurr","onTransitionEnd","Tooltip","base","tooltipdata","increment","isStatExpanded","children","Info","toggleExpandStat","calcLvlValue","data","lvl","Math","floor","handleLvlPlus","onLvlChange","handleLvlMinus","handleLvlChange","img","alt","readOnly","class","HP","ATK","CRT","DEF","HIT","AGI","DOD","resist","Skill","displayedEnemyName","changeDisplayedSkill","displayedSkill","propsdata","skillData","btnlist","skillNavWrapClass","skilldata","enemyInfo","info","SkillView","attr","undefined","skillpower","description","match","skillrate","area","areadata","some","el","rgb","round","backgroundColor","replace","line","range","AP","InfoView","App","Common","enemySkillList","skillDataList","enemyLVL","searchresult","Map","areadatalist","forEach","searcharea","stage","filter","stageelem","wave","waveelem","enemylist","pos","obj","title","has","get","set","parseInt","skills","loadAreaData","arealist","all","areaindex","areaNum","areaData","action","handleEnemyChange","toggleExpandStage","isStageExpanded","trackScrolling","wrappedElement","isBottom","removeEventListener","getBoundingClientRect","bottom","innerHeight","addEventListener","SpottedStage","Stage","Array","from","colSpan","isNaN","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d0842669.chunk.js","sourcesContent":["//파일명 설정\r\nvar setting = '.min';\r\n//var setting = '';\r\n\r\n//공통 데이터 로드 함수\r\nfunction loadData(src)\r\n{\r\n\t//XMLHttpRequest를 사용해 데이터 파일 로드\r\n\t//로드가 완료되면 다음 작업을 진행하도록 Promise 적용\r\n\treturn new Promise((resolve, reject) =>\r\n\t{\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open('GET', src);\r\n\t\trequest.responseType = 'json';\r\n\t\trequest.onreadystatechange = function ()\r\n\t\t{\r\n\t\t\tif (request.readyState === XMLHttpRequest.DONE && request.status === 200)\r\n\t\t\t{\r\n\t\t\t\tresolve(request.response);\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.send();\r\n\t});\r\n}\r\n\r\n//구형 데이터 로드 함수\r\nexport function loadDataOld(src)\r\n{\r\n\t//<script> 요소를 추가해 데이터 파일 로드\r\n\t//로드가 완료되면 다음 작업을 진행하도록 Promise 적용\r\n\treturn new Promise((resolve, reject) =>\r\n\t{\r\n\t\tvar script = document.createElement('script');\r\n\t\tscript.type = \"text/javascript\";\r\n\t\tscript.src = src;\r\n\t\tscript.addEventListener('load', () => { resolve(); }, false);\r\n\t\tscript.addEventListener('error', () => { reject(); }, false);\r\n\t\tvar s = document.getElementsByTagName(\"script\")[0];\r\n\t\ts.parentNode.insertBefore(script, s);\r\n\t});\r\n}\r\n\r\n//지역 데이터 로드 함수\r\nexport function loadAreaData(areaNum)\r\n{\r\n\treturn new Promise((resolve, reject) =>\r\n\t{\r\n\t\t//src를 지역 데이터 파일 주소로 설정해 데이터 파일을 로드하고 areaData 오브젝트 리턴\r\n\t\tvar src = \"data/data-area\" + areaNum + setting + \".json\";\r\n\t\tloadData(src).then((areaData) => resolve(areaData), () => reject());\r\n\t});\r\n}\r\n\r\n//스테이지 데이터 로드 함수\r\nexport function loadStageData(stageTitle)\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\t//src를 지역 데이터 파일로 설정해 로드\r\n\t\tvar src = \"./data/data-area\" + getAreaByStageTitle(stageTitle) + setting + \".json\";\r\n\t\tloadData(src).then((areaData) =>\r\n\t\t{\r\n\t\t\tvar stageData = areaData.stage.find(sData => sData.title === stageTitle);\r\n\t\t\tvar type = getTypeByStageTitle(stageTitle)\r\n\t\t\tvar stageList = areaData.stage.reduce((acc, sData) =>\r\n\t\t\t{\r\n\t\t\t\tif (getTypeByStageTitle(sData.title) === type) acc.push(getIndexByStageTitle(sData.title))\r\n\t\t\t\treturn acc;\r\n\t\t\t}, []);\r\n\t\t\tresolve({ \"stageData\": stageData, \"stageList\": stageList });\r\n\t\t});\r\n\r\n\t});\r\n}\r\n\r\nexport function loadEnemyDataList()\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\tvar src = \"./data/data-enemy\" + setting + \".json\";\r\n\t\tloadData(src).then((enemyDataList) =>\r\n\t\t{\r\n\t\t\tresolve(enemyDataList);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function loadEnemyData(enemyIndex)\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\tvar src = \"./data/data-enemy\" + setting + \".json\";\r\n\t\tloadData(src).then((enemyDataList) =>\r\n\t\t{\r\n\t\t\tvar enemyData = enemyDataList[enemyIndex];\r\n\t\t\tresolve(enemyData);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/*\r\nfunction loadEnemyIMGData()\r\n{\r\n\treturn new Promise(resolve=> {\r\n\t\tvar src=\"./data/data-enemy\"+setting+\".json\";\r\n\t\tloadData(src).then(()=> {\r\n\t\t\tvar enemyIMGData={};\r\n\t\t\tfor (var key in enemyDataList)\r\n\t\t\t{\r\n\t\t\t\tif (enemyDataList.hasOwnProperty(key))\r\n\t\t\t\t{\r\n\t\t\t\t\tenemyIMGData[key] = enemyDataList[key].img;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//var enemyIMGData=enemyDataList.map(data => {return {\"name\": data.name, \"img\": data.img}; });\r\n\t\t\t//resolve(enemyIMGData);\r\n\t\t\tresolve(enemyIMGData);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction loadEnemyDescData()\r\n{\r\n\treturn new Promise(resolve=> {\r\n\t\tvar src=\"./data/data-enemy\"+setting+\".json\";\r\n\t\tloadData(src).then(()=> {\r\n\t\t\tvar enemyDescData=enemyDataList.map(data => {\r\n\t\t\t\tvar rtn = {\"name\": data.name, \"img\": data.img};\r\n\t\t\t\tif('resist' in data) rtn[\"resist\"] = data.resist;\r\n\t\t\t\tif('CRT' in data) rtn[\"CRT\"] = data.CRT;\r\n\t\t\t\treturn rtn;\r\n\t\t\t});\r\n\t\t\tresolve(enemyDescData);\r\n\t\t});\r\n\t});\r\n}\r\n*/\r\n\r\nexport function loadSkillDataList()\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\tvar src = \"./data/data-skill\" + setting + \".json\";\r\n\t\tloadData(src).then((enemySkillList) =>\r\n\t\t{\r\n\t\t\tresolve(enemySkillList);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function getURLParameter(sParam)\r\n{\r\n\tvar sPageURL = window.location.search.substring(1);\r\n\tvar sURLVariables = sPageURL.split('&');\r\n\tfor (var i = 0; i < sURLVariables.length; i++)\r\n\t{\r\n\t\tvar sParameterName = sURLVariables[i].split('=');\r\n\t\tif (sParameterName[0] === sParam) { return sParameterName[1]; }\r\n\t}\r\n}\r\n\r\nexport function getAreaByStageTitle(str)\r\n{\r\n\tvar regex = /^[0-9a-zA-Z]+/;\r\n\treturn str.match(regex)[0];\r\n}\r\n\r\nexport function getIndexByStageTitle(str)\r\n{\r\n\tvar regex = /-[0-9]+/;\r\n\treturn Number(str.match(regex)[0].slice(1));\r\n}\r\n\r\nexport function getTypeByStageTitle(str)\r\n{\r\n\tvar regex = /[a-zA-Z]*$/;\r\n\treturn str.match(regex)[0];\r\n}\r\n\r\nexport function getIndexByStageGrid(grid)\r\n{\r\n\treturn grid[0];\r\n}\r\n\r\nexport function getTypeByStageGrid(grid)\r\n{\r\n\tvar stageTypeTitle = [\"B\", \"\", \"Ex\"];\r\n\treturn stageTypeTitle[grid[1]];\r\n}","import React from \"react\";\r\nimport * as Common from \"./common.js\";\r\n\r\nconst Hangul = require(\"hangul-js\");\r\n\r\nclass NavBar extends React.Component\r\n{\r\n  state = {\r\n    showSearchResult: false,\r\n    showIndexResult: false,\r\n    SearchList: null,\r\n    ResultListStyle: null,\r\n    IndexResultListStyle: null,\r\n    ContainerStyle: null\r\n  };\r\n\r\n  NameList = null;\r\n  isResultClosing = false;\r\n  isSearchResultClosed = true;\r\n\r\n  updateSearchList = (revstate, str) =>\r\n  {\r\n    revstate.showSearchResult = true;\r\n    revstate.showIndexResult = false;\r\n\r\n    if (str.length > 0)\r\n    {\r\n      let searcher = new Hangul.Searcher(str);\r\n\r\n      let searchlist = Object.keys(this.NameList)\r\n        .reduce((acc, curr) =>\r\n        {\r\n          if (searcher.search(curr) !== -1)\r\n          {\r\n            acc.push([curr, searcher.search(curr)]);\r\n          }\r\n          return acc;\r\n        }, [])\r\n        .sort((a, b) =>\r\n        {\r\n          if (a[1] < b[1]) return -1;\r\n          if (a[1] > b[1]) return 1;\r\n          return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0;\r\n        })\r\n        .map(elem => elem[0]);\r\n      revstate.SearchList = searchlist;\r\n    }\r\n    else\r\n    {\r\n      revstate.SearchList = Object.keys(this.NameList);\r\n    }\r\n  };\r\n\r\n  openResultList = revstate =>\r\n  {\r\n    console.log(\"openResultList\")\r\n    revstate.showSearchResult = true;\r\n    if (!matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      let maxHeight = 6250 + \"px\";\r\n      revstate.ResultListStyle = { ...this.state.ResultListStyle, \"maxHeight\": maxHeight };\r\n    }\r\n  }\r\n\r\n  closeResultList = revstate =>\r\n  {\r\n    console.log(\"closeResultList\")\r\n    revstate.showSearchResult = false;\r\n    if (!matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      revstate.ResultListStyle = { ...this.state.ResultListStyle, \"maxHeight\": null };\r\n      this.isResultClosing = true;\r\n    }\r\n  }\r\n\r\n  openIndexResultList = (revstate, index) =>\r\n  {\r\n    console.log(\"openIndexResultList\")\r\n    revstate.showIndexResult = index;\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      let maxWidth = \"230px\";\r\n      let opacity = 1;\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxWidth\": maxWidth, \"opacity\": opacity };\r\n    }\r\n    else\r\n    {\r\n      let maxHeight = document.querySelector(\"#\" + index).scrollHeight + \"px\";\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": maxHeight };\r\n    }\r\n  };\r\n\r\n  closeIndexResultList = revstate =>\r\n  {\r\n    console.log(\"closeIndexResultList\")\r\n    revstate.showIndexResult = false;\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxWidth\": null, \"opacity\": null };\r\n    }\r\n    else\r\n    {\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": null };\r\n    }\r\n  };\r\n\r\n  handleResultsToggleClick = () =>\r\n  {\r\n    document.querySelector(\".navbar-input\").value = null;\r\n    let newstate = {};\r\n    if (this.state.showSearchResult)\r\n    {\r\n      this.closeResultList(newstate);\r\n    }\r\n    else\r\n    {\r\n      this.openResultList(newstate);\r\n    }\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  }\r\n\r\n  handleInputFocus = () =>\r\n  {\r\n    console.log(\"handleInputFocus\")\r\n    let newstate = {};\r\n    this.openResultList(newstate);\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  }\r\n\r\n  handleInputChange = e =>\r\n  {\r\n    console.log(\"handleInputChange\")\r\n    let newstate = {};\r\n    this.updateSearchList(newstate, e.target.value);\r\n    this.closeIndexResultList(newstate);\r\n    window.scrollTo(0, 0);\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  }\r\n\r\n  handleResultsClick = (name, index) =>\r\n  {\r\n    let newstate = {};\r\n    if (this.state.showIndexResult)\r\n    {\r\n      this.closeIndexResultList(newstate);\r\n    }\r\n    if (index !== this.state.showIndexResult)\r\n    {\r\n      this.openIndexResultList(newstate, index);\r\n    }\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  };\r\n\r\n  handleIndexResultsClick = (index, typeindex) =>\r\n  {\r\n    this.props.onEnemyChange(index);\r\n    let newstate = {};\r\n    this.closeResultList(newstate);\r\n    document.querySelector(\".navbar-input\").value = null;\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      this.openIndexResultList(newstate, this.state.showIndexResult);\r\n      newstate.SearchList = Object.keys(this.NameList);\r\n    }\r\n    this.isResultClosing = true;\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  };\r\n\r\n  scrollToIndex = typeindex => \r\n  {\r\n    window.scrollTo(0, Object.values(this.NameList).map(elem => elem[0]).indexOf(typeindex) * 50);\r\n  }\r\n\r\n  resetSearchResult = () =>\r\n  {\r\n    console.log(\"resetSearchResult\")\r\n    if (!matchMedia(\"(min-width: 1100px)\").matches && this.isResultClosing)\r\n    {\r\n      this.isResultClosing = false;\r\n      let newstate = {};\r\n      this.closeIndexResultList(newstate);\r\n      this.setState(prevstate => ({\r\n        ...prevstate,\r\n        ...newstate,\r\n        \"showSearchResult\": false,\r\n        \"showIndexResult\": false,\r\n        \"SearchList\": Object.keys(this.NameList)\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    (async () =>\r\n    {\r\n      let enemyDataList = await Common.loadEnemyDataList();\r\n      this.NameList = Object.keys(enemyDataList).reduce((acc, curr) =>\r\n      {\r\n        if (!Object.keys(acc).includes(enemyDataList[curr].name))\r\n        {\r\n          acc[enemyDataList[curr].name] = [curr];\r\n        }\r\n        else\r\n        {\r\n          acc[enemyDataList[curr].name].push(curr);\r\n        }\r\n        return acc;\r\n      }, {});\r\n      this.setState(prevstate => ({\r\n        ...prevstate,\r\n        \"showSearchResult\": false,\r\n        \"showIndexResult\": false,\r\n        \"SearchList\": Object.keys(this.NameList)\r\n      }));\r\n    })();\r\n  }\r\n\r\n  componentDidUpdate()\r\n  {\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      if (this.isResultClosing)\r\n      {\r\n        console.log(\"this.state.showIndexResult: \" + this.state.showIndexResult)\r\n        this.scrollToIndex(this.state.showIndexResult);\r\n        this.isResultClosing = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    console.log(\"renderNavBar\")\r\n    return (\r\n      <div className=\"nav\">\r\n        <div className=\"navbar\">\r\n          <div className=\"navbar-button\" onClick={this.handleResultsToggleClick}>\r\n            <i className=\"material-icons material-icons-list\" style={this.state.showSearchResult ? { opacity: 0 } : null}>list</i>\r\n            <i className=\"material-icons material-icons-close\" style={this.state.showSearchResult ? null : { opacity: 0 }}>close</i>\r\n          </div>\r\n          <input type=\"text\" className=\"navbar-input\" placeholder=\"이름을 입력하세요.\" onFocus={this.handleInputFocus} onChange={this.handleInputChange}></input>\r\n          <div className=\"navbar-input-icon\">\r\n            <i className=\"material-icons\">search</i>\r\n          </div>\r\n        </div>\r\n        <List\r\n          SearchList={this.state.SearchList}\r\n          NameList={this.NameList}\r\n          handleResultsClick={this.handleResultsClick}\r\n          handleIndexResultsClick={this.handleIndexResultsClick}\r\n          resetSearchResult={this.resetSearchResult}\r\n          ResultListStyle={this.state.ResultListStyle}\r\n          showIndexResult={this.state.showIndexResult}\r\n          IndexResultListStyle={this.state.IndexResultListStyle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass List extends React.Component\r\n{\r\n  render()\r\n  {\r\n    let searchresults = this.props.SearchList == null ? [] :\r\n      this.props.SearchList.reduce((acc, curr) =>\r\n      {\r\n        let name = curr;\r\n        let indexes = this.props.NameList[curr];\r\n        let typeindex = indexes[0];\r\n        acc.value.push(\r\n          <div className=\"list-result-container\" key={typeindex + \"container\"} id={typeindex + \"container\"}>\r\n            <li className=\"list-result\" key={typeindex} onClick={() => { this.props.handleResultsClick(name, typeindex); }}>{name}</li>\r\n            <ul className=\"list list-index\" id={typeindex} key={typeindex + \"indexlist\"}\r\n              style={typeindex === this.props.showIndexResult ? this.props.IndexResultListStyle : null\r\n              }>\r\n              {indexes.reduce((indexacc, indexcurr) =>\r\n              {\r\n                indexacc.index++;\r\n                indexacc.value.push(<li className=\"list-result list-indexresult\" key={indexcurr} onClick={() => { this.props.handleIndexResultsClick(indexcurr, typeindex); }}>{name + \" \" + (indexacc.index)}</li>);\r\n                return indexacc;\r\n              }, { index: 0, value: [] }).value}\r\n            </ul>\r\n          </div>\r\n        );\r\n        acc.index++;\r\n        return acc;\r\n      }, { value: [], index: 0 }).value;\r\n\r\n    return (\r\n      <ul className=\"list\" style={this.props.ResultListStyle} onTransitionEnd={this.props.resetSearchResult}>\r\n        {searchresults}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {Fragment} from 'react';\r\n\r\nclass Tooltip extends React.Component\r\n{\r\n  render()\r\n  {\r\n    const base = this.props.tooltipdata.base;\r\n    const increment = this.props.tooltipdata.increment;\r\n    if (this.props.isStatExpanded)\r\n    {\r\n      return (\r\n        <Fragment>\r\n          {this.props.children}\r\n          <div className=\"tooltip-innertext tooltip-innertext-expanded\" > {base} + {increment} / Lv</div >\r\n        </Fragment >\r\n      );\r\n    }\r\n    else return (\r\n      <div className=\"tooltip tooltip-stat\">\r\n        {this.props.children}\r\n        <div className=\"tooltip-innertext tooltip-innertext-right\">기본: {base}<br />레벨당 증가량: {increment}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tooltip;","import React from 'react';\r\nimport Tooltip from './Tooltip.js';\r\n\r\nclass Info extends React.Component\r\n{\r\n  state = {\r\n    \"isStatExpanded\": false\r\n  }\r\n\r\n  toggleExpandStat = () =>\r\n  {\r\n    this.setState((prevstate) => ({ ...prevstate, \"isStatExpanded\": prevstate.isStatExpanded ^ true }));\r\n  };\r\n\r\n  calcLvlValue = (data, lvl) =>\r\n  {\r\n    return Math.floor(data.base + data.increment * (lvl - 1));\r\n  };\r\n\r\n  handleLvlPlus = () =>\r\n  {\r\n    this.props.onLvlChange('+');\r\n  };\r\n\r\n  handleLvlMinus = () =>\r\n  {\r\n    this.props.onLvlChange('-');\r\n  };\r\n\r\n  handleLvlChange = (e) =>\r\n  {\r\n    this.props.onLvlChange(e.target.value);\r\n  };\r\n\r\n  render()\r\n  {\r\n    const data = this.props.data;\r\n    const enemyData = data.enemyData;\r\n    const lvl = data.lvl;\r\n    return (\r\n      <div className=\"info-container\">\r\n        <div className=\"image\"><img src={\"images/profile/\" + enemyData.img + \".png\"} alt={enemyData.img} /></div>\r\n        <div className=\"type\">\r\n          <h4 id=\"type\">{enemyData.type}</h4>\r\n        </div>\r\n        <div className=\"name\">\r\n          <h2 id=\"name\">{enemyData.name}</h2>\r\n        </div>\r\n        <div className=\"LVL\">\r\n          <button className=\"lvl-change lvl-minus\" onClick={this.handleLvlMinus}><i className=\"material-icons\">remove</i></button>\r\n          <div>\r\n            <input className=\"lvl-header\" type=\"text\" value=\"Lv.\" readOnly></input>\r\n            <div className=\"tooltip\">\r\n              <input className=\"lvl-input\" type=\"text\" value={lvl} onChange={this.handleLvlChange}></input>\r\n              <div className=\"tooltip-innertext tooltip-innertext-bottom\">값을 직접 입력할 수 있습니다</div>\r\n            </div>\r\n          </div>\r\n          <button className=\"lvl-change lvl-plus\" onClick={this.handleLvlPlus}><i className=\"material-icons\">add</i></button>\r\n        </div>\r\n        <div className=\"spec-wrap\">\r\n          <div className=\"spec-item spec-item-header\" id=\"HP\"><img src=\"images/icon_HP2.png\" alt=\"HP Icon\" /><div>HP</div></div><div class=\"spec-item\" id=\"HP\"><Tooltip tooltipdata={enemyData.HP} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue(enemyData.HP, lvl)}</span></Tooltip></div>\r\n          <div className=\"spec-item spec-item-header\"></div><div class=\"spec-item\" ></div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_ATK2.png\" alt=\"ATK Icon\" /><div>공격력</div></div><div className=\"spec-item\" id=\"ATK\"><Tooltip tooltipdata={enemyData.ATK} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue(enemyData.ATK, lvl)}</span></Tooltip></div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_CRT2.png\" alt=\"CRT Icon\" /><div>치명타</div></div><div className=\"spec-item\" id=\"CRT\">{enemyData.CRT} %</div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_DEF2.png\" alt=\"DEF Icon\" /><div>방어력</div></div><div className=\"spec-item\" id=\"DEF\"><Tooltip tooltipdata={enemyData.DEF} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue(enemyData.DEF, lvl)}</span></Tooltip></div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_HIT2.png\" alt=\"HIT Icon\" /><div>적중률</div></div><div className=\"spec-item\" id=\"HIT\">{enemyData.HIT} %</div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_AGI.png\" alt=\"AGI Icon\" /><div>행동력</div></div><div className=\"spec-item\" id=\"AGI\">{enemyData.AGI}</div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_DOD2.png\" alt=\"DOD Icon\" /><div>회피율</div></div><div className=\"spec-item\" id=\"DOD\">{enemyData.DOD} %</div>\r\n          <div className=\"spec-item resist-wrap\">\r\n            <div className=\"spec-item resist resist-header\">속성 저항</div>\r\n            <div className=\"spec-item resist\" id=\"fire\"><img className=\"icon-attr\" src=\"images/fire.png\" alt=\"fireicon\" /> {enemyData.resist[0]} %</div>\r\n            <div className=\"spec-item resist\" id=\"ice\"><img className=\"icon-attr\" src=\"images/ice.png\" alt=\"iceicon\" /> {enemyData.resist[1]} %</div>\r\n            <div className=\"spec-item resist\" id=\"electric\"><img className=\"icon-attr\" src=\"images/electric.png\" alt=\"electricicon\" /> {enemyData.resist[2]} %</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nclass Skill extends React.Component\r\n{\r\n  state = {\r\n    \"displayedSkill\": 0\r\n  };\r\n\r\n  displayedEnemyName = this.props.data.enemyData.name;\r\n\r\n  changeDisplayedSkill = (index) =>\r\n  {\r\n    this.setState({ \"displayedSkill\": index });\r\n  }\r\n\r\n  componentDidUpdate()\r\n  {\r\n    console.log(this.props.data.enemyData.name)\r\n    console.log(this.displayedEnemyName)\r\n    if(this.props.data.enemyData.name !== this.displayedEnemyName)\r\n    {\r\n      this.displayedEnemyName = this.props.data.enemyData.name;\r\n      this.setState({ \"displayedSkill\": 0 });\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    const displayedSkill = this.state.displayedSkill;\r\n    const propsdata = this.props.data;\r\n    const enemyData = propsdata.enemyData;\r\n    const skillData = propsdata.skillData;\r\n    const lvl = propsdata.lvl;\r\n    let btnlist = skillData.map((data, index) => (\r\n      <button className={`btn skill-${data.type} ${displayedSkill === index ? \"active\" : \"\"}`} key={\"skillbtn\" + index} onClick={() => this.changeDisplayedSkill(index)}>\r\n        <img className={\"skill-icon\"} src={`images/SkillIcon/${data.img}_${data.type}.png`} alt={`${data.img}_${data.type} icon`} />\r\n      </button>\r\n    ));\r\n    btnlist.push(\r\n      <button className={`btn btn-info skill-active ${displayedSkill === skillData.length ? \"active\" : \"\"}`} key=\"skillinfobtn\" onClick={() => this.changeDisplayedSkill(skillData.length)}>\r\n        <img className=\"skill-icon info-icon\" src=\"images/info.png\" alt=\"info icon\" />\r\n      </button>\r\n    );\r\n\r\n    let skillNavWrapClass = \"skill-nav-wrap skill-active\";\r\n    if (displayedSkill < skillData.length)\r\n    {\r\n      skillNavWrapClass = \"skill-nav-wrap skill-\" + skillData[displayedSkill].type;\r\n    }\r\n\r\n    return (\r\n      <div className=\"skill-container\">\r\n        <div className=\"skill-header\">\r\n          <h3>보유 스킬</h3>\r\n        </div>\r\n        <div className={skillNavWrapClass}>\r\n          <nav className=\"skill-nav\">\r\n            {btnlist}\r\n          </nav>\r\n        </div>\r\n        {\r\n          displayedSkill < skillData.length ?\r\n            <SkillView skilldata={skillData[displayedSkill]} ATK={enemyData.ATK} lvl={lvl} /> :\r\n            <InfoView enemyInfo={enemyData.info} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SkillView extends React.Component\r\n{\r\n  render()\r\n  {\r\n    const skilldata = this.props.skilldata;\r\n    const ATK = this.props.ATK.base + this.props.ATK.increment * (this.props.lvl - 1);\r\n\r\n    let attr = \"normal\"\r\n    if (skilldata.attr !== undefined) { attr = skilldata.attr; }\r\n\r\n    let skillpower = \"\"\r\n    var m = skilldata.description.match(/\\$\\((\\d+\\.*\\d*)\\)/);\r\n    if (m != null)\r\n    {\r\n      let skillrate = skilldata.description.match(/\\$\\((\\d+\\.*\\d*)\\)/)[1];\r\n      skillpower = Math.floor(ATK * skillrate);\r\n      (skillpower<1) && (skillpower=1);\r\n    }\r\n\r\n    let area = [];\r\n    if (!skilldata.areadata.some(el => { return el < 1; }))\r\n    {\r\n      for (let i = 0; i < skilldata.areadata.length; i++)\r\n      {\r\n        area[skilldata.areadata[i] - 1] = { backgroundColor: \"rgb(255, 213, 0)\" };\r\n      }\r\n    }\r\n    else\r\n    {\r\n      for (let i = 0; i < 9; i++)\r\n      {\r\n        let rgb = [255, Math.round((213 - 128) / 0.5 * (skilldata.areadata[i] - 0.5) + 128), 0];\r\n        if (skilldata.areadata[i] === 0) { rgb = [45, 45, 45]; }\r\n        area[i] = { backgroundColor: `rgb(${rgb})` };\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"skillview-container\">\r\n        <div className=\"skill-name\">\r\n          <img className='icon-attr' src={\"images/\" + attr + \".png\"} alt={attr + \" icon\"} /><h5> Lv. 1</h5> <h3> {skilldata.name} </h3>\r\n        </div>\r\n        <div className=\"skill-area\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td style={area[6]}></td><td style={area[7]}></td><td style={area[8]}></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={area[3]}></td><td style={area[4]}></td><td style={area[5]}></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={area[0]}></td><td style={area[1]}></td><td style={area[2]}></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"skill-description\">\r\n          <p>{skilldata.description.replace(/\\$\\((\\d+\\.*\\d*)\\)/g, (skillpower)+\" ($1배)\").split('<br>').map((line, i) => <span key={i}>{line}<br /></span>)}</p>\r\n        </div>\r\n        <div className=\"skill-range\">\r\n          사정거리 {skilldata.range}<br />AP-{skilldata.AP}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass InfoView extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"skillview-container info-description\">\r\n        <h3>대상 정보</h3>\r\n        <p>{this.props.enemyInfo.split('<br>').map((line, i) => <span key={i}>{line}<br /></span>)}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skill;","import React from 'react';\nimport * as Common from './common.js';\nimport NavBar from './NavBar.js';\nimport Info from './Info.js';\nimport Skill from './Skill.js';\nimport './App.css';\n\nclass App extends React.Component\n{\n  state = {\n    \"enemyIndex\": null,\n    \"lvl\": null,\n    \"enemyData\": null,\n    \"skillData\": null,\n    \"SpottedStage\": null,\n    \"isStageExpanded\": false\n  };\n\n  constructor(props)\n  {\n    console.log(\"constructor\");\n    super(props);\n    this.loadAreaData(this.props.enemyIndex);\n  }\n\n  loadData = async (enemyIndex) =>\n  {\n    let enemyData = await Common.loadEnemyData(enemyIndex);\n    let skillDataList = await Common.loadSkillDataList();\n    let lvl = this.state.lvl || this.props.enemyLVL;\n\n    let searchresult = new Map();\n    this.areadatalist.forEach(areadata =>\n    {\n      let searcharea = areadata.stage.filter(stageelem => stageelem.wave.some(waveelem => waveelem.enemylist.some(pos => pos.index === enemyIndex)))\n        .map(stage =>\n        {\n          let obj = { \"title\": stage.title };\n          ('name' in stage) && (obj.name = stage.name);\n          return obj;\n        });\n      if (searcharea.length > 0)\n      {\n        if (areadata.title.includes(\"Daily\"))\n        {\n          console.log(areadata.title)\n          console.log(searchresult)\n          searchresult.has(\"Daily\") ? searchresult.get(\"Daily\").push(...searcharea) : searchresult.set(\"Daily\", searcharea);\n        }\n        else searchresult.set(areadata.title, searcharea);\n      }\n    });\n    console.log(searchresult)\n\n    this.setState({\n      \"enemyIndex\": enemyIndex,\n      \"enemyData\": enemyData,\n      \"lvl\": parseInt(lvl),\n      \"skillData\": enemyData.skills.map(index => skillDataList[index]),\n      \"SpottedStage\": searchresult\n    });\n  };\n\n  loadAreaData = async enemyIndex =>\n  {\n    const arealist = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"Daily1\", \"Daily2\", \"Daily3\", \"Ev11\", \"Ev21\", \"Ev22\", \"Ev23\", \"Ev31\", \"Ev41\", \"Ev51\", \"Ev52\"];\n    this.areadatalist = await Promise.all(arealist.map(areaindex => Common.loadAreaData(areaindex)));\n    this.loadData(enemyIndex);\n  }\n\n  handleLvlChange = (action) =>\n  {\n    let lvl = this.state.lvl;\n    if (action === '+')\n    {\n      lvl++;\n    }\n    else if (action === '-')\n    {\n      lvl--;\n    }\n    else\n    {\n      lvl = parseInt(action);\n    }\n    this.setState(prevstate => ({\n      ...prevstate,\n      \"lvl\": lvl\n    }));\n  }\n\n  handleEnemyChange = index =>\n  {\n    this.loadData(index);\n  }\n\n  toggleExpandStage = () =>\n  {\n    this.setState((prevstate) => ({ ...prevstate, \"isStageExpanded\": prevstate.isStageExpanded ^ true }));\n  };\n\n  isBottom(el)\n  {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  trackScrolling = () =>\n  {\n    const wrappedElement = document.querySelector(\".content\");\n    if (this.isBottom(wrappedElement))\n    {\n      console.log('header bottom reached');\n      document.removeEventListener('scroll', this.trackScrolling);\n    }\n  };\n\n  componentDidMount()\n  {\n    console.log(\"componentDidMount\")\n    document.addEventListener('scroll', this.trackScrolling);\n  }\n\n  componentDidUpdate()\n  {\n    console.log(\"componentDidUpdate\")\n  }\n\n  render()\n  {\n    console.log(\"renderApp\")\n    return (\n      this.state.enemyData == null ? <div>Loading...</div>\n        :\n        <div className=\"container\">\n          <div className=\"nav-container\">\n            <NavBar onEnemyChange={this.handleEnemyChange} />\n          </div>\n          <div className=\"content-container\">\n            <div className=\"content\">\n              <Info data={this.state} onLvlChange={this.handleLvlChange} />\n              <Skill data={this.state} index={this.props.enemyIndex} />\n              <Stage SpottedStage={this.state.SpottedStage} isStageExpanded={this.state.isStageExpanded} toggleExpandStage={this.toggleExpandStage} />\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst Stage = props =>\n{\n  return (\n    <div className=\"stage\">\n      <div className=\"stage-header\" onClick={props.toggleExpandStage}>등장 스테이지<i className=\"material-icons\">{(props.isStageExpanded ? \"expand_less\" : \"expand_more\")}</i></div>\n      <div className={\"stage-inner\" + (props.isStageExpanded ? \"\" : \" stage-inner-hidden\")}>\n        {\n          Array.from(props.SpottedStage, ([key, value]) => (\n            <table key={key}>\n              <thead>\n                {key.includes(\"Daily\") ? \"\" : <tr><th colSpan={value.length}>{key + (isNaN(key) ? \"\" : \"지역\")}</th></tr>}\n              </thead>\n              <tbody>\n                <tr>{value.map(stage => (<td key={stage.title}><a href={\"stage.html?stagetitle=\" + stage.title}>{stage.name || stage.title}</a></td>))}</tr>\n              </tbody>\n            </table>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Common from './common.js';\nimport App from './App.js';\nimport './index.css';\n\nvar enemyIndex = Common.getURLParameter('enemy') || \"NightChick_N\";\nvar enemyLVL = Common.getURLParameter('lvl') || 1;\n\nReactDOM.render(<App enemyIndex = {enemyIndex} enemyLVL = {enemyLVL} />, document.getElementById('root'));\n"],"sourceRoot":""}